/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthedEquipmentsIndexRouteImport } from './routes/_authed/equipments/index'
import { Route as AuthRegisterIndexRouteImport } from './routes/_auth/register/index'
import { Route as AuthLoginIndexRouteImport } from './routes/_auth/login/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthedEquipmentsIndexRoute = AuthedEquipmentsIndexRouteImport.update({
  id: '/_authed/equipments/',
  path: '/equipments/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRegisterIndexRoute = AuthRegisterIndexRouteImport.update({
  id: '/_auth/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthLoginIndexRoute = AuthLoginIndexRouteImport.update({
  id: '/_auth/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/register': typeof AuthRegisterIndexRoute
  '/equipments': typeof AuthedEquipmentsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof AuthLoginIndexRoute
  '/register': typeof AuthRegisterIndexRoute
  '/equipments': typeof AuthedEquipmentsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth/login/': typeof AuthLoginIndexRoute
  '/_auth/register/': typeof AuthRegisterIndexRoute
  '/_authed/equipments/': typeof AuthedEquipmentsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/login' | '/register' | '/equipments'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/register' | '/equipments'
  id:
    | '__root__'
    | '/'
    | '/_auth/login/'
    | '/_auth/register/'
    | '/_authed/equipments/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthLoginIndexRoute: typeof AuthLoginIndexRoute
  AuthRegisterIndexRoute: typeof AuthRegisterIndexRoute
  AuthedEquipmentsIndexRoute: typeof AuthedEquipmentsIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authed/equipments/': {
      id: '/_authed/equipments/'
      path: '/equipments'
      fullPath: '/equipments'
      preLoaderRoute: typeof AuthedEquipmentsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/register/': {
      id: '/_auth/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof AuthRegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth/login/': {
      id: '/_auth/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthLoginIndexRoute: AuthLoginIndexRoute,
  AuthRegisterIndexRoute: AuthRegisterIndexRoute,
  AuthedEquipmentsIndexRoute: AuthedEquipmentsIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
